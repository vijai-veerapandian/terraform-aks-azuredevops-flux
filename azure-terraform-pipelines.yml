# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
  
stages:
  - stage: TerraformValidate
    jobs:
      - job: TerrafomrValidateJob
        continueOnError: false
        steps:
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              ArtifactName: 'terraform-manifests-out'
              publishLocation: 'Container'
          - task: TerraformInstaller@1
            displayName:  Terraform install 
            inputs:
              terraformVersion: 'latest'            
          - task: TerraformTask@5
            displayName: Terraform init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              backendAzureRmUseEntraIdForAuthentication: false
              backendServiceArm: 'tf-azure-devops-aks-service-conn'
              backendAzureRmResourceGroupName: 'rg-home-lab-dev'
              backendAzureRmStorageAccountName: 'st08xthappl5'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'aks-base.tfstate'
          - task: TerraformTask@5
            displayName: Terraform validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
            